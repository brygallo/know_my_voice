image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_IMAGE: "registry.gitlab.com/bryan13gallo/know_my_voice"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_DRIVER: "overlay2"
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - deploy

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

build:
  stage: build
  script:
    - docker build -t $DOCKER_IMAGE:latest -f docker/Dockerfile .
    - docker push $DOCKER_IMAGE:latest

deploy:
  stage: deploy
  only:
    - main
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts || true

  script:
    # ðŸ”¹ Probar conexiÃ³n SSH
    - echo "ðŸ”¹ Probando conexiÃ³n SSH con el servidor..."
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "echo 'âœ… ConexiÃ³n SSH exitosa'"

    # ðŸ”¹ Clonar o actualizar cÃ³digo
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
        cd /home/$SSH_USER/know_my_voice &&
        git pull origin main &&
        chmod +x setup.sh
      "

    # ðŸ”¹ Crear .env pasando variables inline
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
        DJANGO_SECRET_KEY='$DJANGO_SECRET_KEY' \
        DJANGO_DEBUG='$DJANGO_DEBUG' \
        DJANGO_ALLOWED_HOSTS='$DJANGO_ALLOWED_HOSTS' \
        DATABASE_NAME='$DATABASE_NAME' \
        DATABASE_USER='$DATABASE_USER' \
        DATABASE_PASSWORD='$DATABASE_PASSWORD' \
        DATABASE_HOST='$DATABASE_HOST' \
        DATABASE_PORT='$DATABASE_PORT' \
        bash -c 'source /dev/stdin' <<'EOF'
          echo \"Generating .env file...\"
          cat <<EOT > /home/$SSH_USER/know_my_voice/.env
# Django settings
DJANGO_SECRET_KEY=\$DJANGO_SECRET_KEY
DJANGO_DEBUG=\$DJANGO_DEBUG
DJANGO_ALLOWED_HOSTS=\$DJANGO_ALLOWED_HOSTS

# Database settings
DATABASE_NAME=\$DATABASE_NAME
DATABASE_USER=\$DATABASE_USER
DATABASE_PASSWORD=\$DATABASE_PASSWORD
DATABASE_HOST=\$DATABASE_HOST
DATABASE_PORT=\$DATABASE_PORT
EOT
          echo \".env file generated successfully!\"
EOF
      "

    # ðŸ”¹ Descargar imagen actualizada del contenedor
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker pull $DOCKER_IMAGE:latest"

    # ðŸ”¹ Reiniciar servicios con docker-compose
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
        cd /home/$SSH_USER/know_my_voice &&
        (docker-compose down || docker compose down || true) &&
        (docker-compose up -d --force-recreate --no-deps web || docker compose up -d --force-recreate --no-deps web)
      "
