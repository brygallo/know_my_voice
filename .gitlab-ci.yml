image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_IMAGE: "registry.gitlab.com/bryan13gallo/know_my_voice"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_DRIVER: "overlay2"
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - deploy

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

build:
  stage: build
  script:
    - docker build -t $DOCKER_IMAGE:latest -f docker/Dockerfile .
    - docker push $DOCKER_IMAGE:latest

deploy:
  stage: deploy
  only:
    - main
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts || true

  script:
    # ðŸ”¹ Prueba de conexiÃ³n SSH
    - echo "ðŸ”¹ Probando conexiÃ³n SSH con el servidor..."
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "echo 'âœ… ConexiÃ³n SSH exitosa'"

    # ðŸ”¹ Clonar o actualizar cÃ³digo
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
        cd /home/$SSH_USER/know_my_voice &&
        git pull origin main
      "

    # ðŸ”¹ Generar archivo .env inline
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
        cd /home/$SSH_USER/know_my_voice &&
        echo \"# Django settings\" > .env &&
        echo \"DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY\" >> .env &&
        echo \"DJANGO_DEBUG=$DJANGO_DEBUG\" >> .env &&
        echo \"DJANGO_ALLOWED_HOSTS=$DJANGO_ALLOWED_HOSTS\" >> .env &&
        echo \"\" >> .env &&
        echo \"# Database settings\" >> .env &&
        echo \"DATABASE_NAME=$DATABASE_NAME\" >> .env &&
        echo \"DATABASE_USER=$DATABASE_USER\" >> .env &&
        echo \"DATABASE_PASSWORD=$DATABASE_PASSWORD\" >> .env &&
        echo \"DATABASE_HOST=$DATABASE_HOST\" >> .env &&
        echo \"DATABASE_PORT=$DATABASE_PORT\" >> .env &&
        echo \".env file generated!\"
      "

    # ðŸ”¹ Descargar imagen actualizada del contenedor
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
        docker pull $DOCKER_IMAGE:latest
      "

    # ðŸ”¹ Reiniciar servicios con docker-compose (solo con guion)
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
        cd /home/$SSH_USER/know_my_voice &&
        docker-compose down || true &&
        docker-compose up -d --force-recreate --no-deps web
      "
