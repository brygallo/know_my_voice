image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_IMAGE: "registry.gitlab.com/bryan13gallo/know_my_voice"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_DRIVER: "overlay2"
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - deploy

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

build:
  stage: build
  script:
    - docker build -t $DOCKER_IMAGE:latest -f docker/Dockerfile .
    - docker push $DOCKER_IMAGE:latest

deploy:
  stage: deploy
  only:
    - main
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts || true
  script:
    # ðŸ”¹ Prueba de conexiÃ³n SSH antes de continuar
    - echo "ðŸ”¹ Probando conexiÃ³n SSH con el servidor..."
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "echo 'âœ… ConexiÃ³n SSH exitosa'"

    # ðŸ”¹ Definir variables en el servidor antes de ejecutar setup.sh
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "export DJANGO_SECRET_KEY='$DJANGO_SECRET_KEY'"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "export DJANGO_DEBUG='$DJANGO_DEBUG'"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "export DJANGO_ALLOWED_HOSTS='$DJANGO_ALLOWED_HOSTS'"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "export DATABASE_NAME='$DATABASE_NAME'"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "export DATABASE_USER='$DATABASE_USER'"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "export DATABASE_PASSWORD='$DATABASE_PASSWORD'"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "export DATABASE_HOST='$DATABASE_HOST'"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "export DATABASE_PORT='$DATABASE_PORT'"

    # ðŸ”¹ Actualizar el cÃ³digo y generar .env
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/know_my_voice && git pull origin main"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "chmod +x /home/$SSH_USER/know_my_voice/setup.sh"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "/home/$SSH_USER/know_my_voice/setup.sh"

    # ðŸ”¹ Descargar la Ãºltima imagen de Docker
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker pull $DOCKER_IMAGE:latest"

    # ðŸ”¹ Verificar quÃ© comando de Docker Compose estÃ¡ disponible
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker-compose version || docker compose version"

    # ðŸ”¹ Detener y reiniciar el contenedor con Docker Compose (con `cd` al proyecto)
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/know_my_voice && docker-compose down || cd /home/$SSH_USER/know_my_voice && docker compose down || true"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/know_my_voice && docker-compose up -d --force-recreate --no-deps web || cd /home/$SSH_USER/know_my_voice && docker compose up -d --force-recreate --no-deps web"
